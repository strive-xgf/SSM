<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.xgf.mybatis_spring.dao.StudentMapper">
    <!--    parameterType 输入(接收)的参数类型
        resultType  返回的类型
        #{id}是占位符 select * from users where id = ?;
     -->
    <select id="getStudentById" parameterType="String" resultType="com.xgf.mybatis_spring.bean.Student">
        select stuId,stuName,stuClass,stuScore from student where stuId = #{stuId}
    </select>

    <!--   keyProperty  获取到的新插入的记录的主键赋值给返回对象的属性
            useGeneratedKeys="true",使用主键生成（主键自动增长）
            keyProperty="id" 将主键的值stuId赋值给对象user(javabean类的属性)  (创建对象的时候不用赋值主键值)
    -->
    <insert id="addStudent" parameterType="com.xgf.mybatis_spring.bean.Student" useGeneratedKeys="true" keyProperty="stuId">
        insert into student(stuId,stuName,stuClass,stuScore) values(#{stuId},#{stuName},#{stuClass},#{stuScore});
    </insert>

    <!-- 输出多个用户对象 ， mybatis会自动判断  如果是多个User对象，自动封装成集合   -->
    <select id="getAllStudent" resultType="com.xgf.mybatis_spring.bean.Student">
        select stuId,stuName,stuClass,stuScore from student ;
    </select>


    <update id="updateStudent" parameterType="com.xgf.mybatis_spring.bean.Student" >
        update student set stuName=#{stuName},stuClass=#{stuClass},stuScore=#{stuScore} where stuId=#{stuId}
    </update>

    <delete id="deleteStudent" parameterType="String">
          delete from student where stuId=#{stuId}
    </delete>

    <!--返回类型是map类型不再是Student类型了   可以写map 或者java.util.Map -->
    <resultMap id="studentMap" type="java.util.Map">
        <!-- <id>对应的是主键  存放表的主键的值  其它非主键的值都用<result>
             property对应的是map当中key的名字(select id,username)
             column对应的是数据库中的列名
         -->
        <id property="id" column="stuId"/>
        <result property="stuName" column="stuName"/>
    </resultMap>
<!--  相当于 map.put("id","123")
            map.put("username","name")
            map.put("passwor","123456")
            [{id=100001, username=内测1}, {id=100002, username=222222}, {id=100003, username=save user}]
-->

    <select id="listStudentMap" resultMap="studentMap">
        select stuId,stuName,stuClass,stuScore from student;
    </select>

</mapper>