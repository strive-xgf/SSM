package com.xgf.mybatis_generator.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> friendsCriteria;

        protected List<Criterion> hobbysCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            friendsCriteria = new ArrayList<Criterion>();
            hobbysCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getFriendsCriteria() {
            return friendsCriteria;
        }

        protected void addFriendsCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            friendsCriteria.add(new Criterion(condition, value, "com.xgf.mybatis_generator.typeHandler.StringArrayVarcharHandler"));
            allCriteria = null;
        }

        protected void addFriendsCriterion(String condition, String[] value1, String[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            friendsCriteria.add(new Criterion(condition, value1, value2, "com.xgf.mybatis_generator.typeHandler.StringArrayVarcharHandler"));
            allCriteria = null;
        }

        public List<Criterion> getHobbysCriteria() {
            return hobbysCriteria;
        }

        protected void addHobbysCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            hobbysCriteria.add(new Criterion(condition, value, "com.xgf.mybatis_generator.typeHandler.StringArrayVarcharHandler"));
            allCriteria = null;
        }

        protected void addHobbysCriterion(String condition, String[] value1, String[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            hobbysCriteria.add(new Criterion(condition, value1, value2, "com.xgf.mybatis_generator.typeHandler.StringArrayVarcharHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || friendsCriteria.size() > 0
                || hobbysCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(friendsCriteria);
                allCriteria.addAll(hobbysCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("password is null");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("password is not null");
            return (Criteria) this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("password =", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("password <>", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("password >", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("password >=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("password <", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("password <=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("password like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("password not like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordIn(List<String> values) {
            addCriterion("password in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotIn(List<String> values) {
            addCriterion("password not in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("password between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("password not between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNull() {
            addCriterion("birthday is null");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNotNull() {
            addCriterion("birthday is not null");
            return (Criteria) this;
        }

        public Criteria andBirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("birthday =", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("birthday <>", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("birthday >", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("birthday >=", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThan(Date value) {
            addCriterionForJDBCDate("birthday <", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("birthday <=", value, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("birthday in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("birthday not in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("birthday between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("birthday not between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andTelephoneIsNull() {
            addCriterion("telephone is null");
            return (Criteria) this;
        }

        public Criteria andTelephoneIsNotNull() {
            addCriterion("telephone is not null");
            return (Criteria) this;
        }

        public Criteria andTelephoneEqualTo(String value) {
            addCriterion("telephone =", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneNotEqualTo(String value) {
            addCriterion("telephone <>", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneGreaterThan(String value) {
            addCriterion("telephone >", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneGreaterThanOrEqualTo(String value) {
            addCriterion("telephone >=", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneLessThan(String value) {
            addCriterion("telephone <", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneLessThanOrEqualTo(String value) {
            addCriterion("telephone <=", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneLike(String value) {
            addCriterion("telephone like", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneNotLike(String value) {
            addCriterion("telephone not like", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneIn(List<String> values) {
            addCriterion("telephone in", values, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneNotIn(List<String> values) {
            addCriterion("telephone not in", values, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneBetween(String value1, String value2) {
            addCriterion("telephone between", value1, value2, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneNotBetween(String value1, String value2) {
            addCriterion("telephone not between", value1, value2, "telephone");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterIsNull() {
            addCriterion("hourseRegister is null");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterIsNotNull() {
            addCriterion("hourseRegister is not null");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterEqualTo(String value) {
            addCriterion("hourseRegister =", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterNotEqualTo(String value) {
            addCriterion("hourseRegister <>", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterGreaterThan(String value) {
            addCriterion("hourseRegister >", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterGreaterThanOrEqualTo(String value) {
            addCriterion("hourseRegister >=", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterLessThan(String value) {
            addCriterion("hourseRegister <", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterLessThanOrEqualTo(String value) {
            addCriterion("hourseRegister <=", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterLike(String value) {
            addCriterion("hourseRegister like", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterNotLike(String value) {
            addCriterion("hourseRegister not like", value, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterIn(List<String> values) {
            addCriterion("hourseRegister in", values, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterNotIn(List<String> values) {
            addCriterion("hourseRegister not in", values, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterBetween(String value1, String value2) {
            addCriterion("hourseRegister between", value1, value2, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andHourseRegisterNotBetween(String value1, String value2) {
            addCriterion("hourseRegister not between", value1, value2, "hourseRegister");
            return (Criteria) this;
        }

        public Criteria andFriendsIsNull() {
            addCriterion("friends is null");
            return (Criteria) this;
        }

        public Criteria andFriendsIsNotNull() {
            addCriterion("friends is not null");
            return (Criteria) this;
        }

        public Criteria andFriendsEqualTo(String[] value) {
            addFriendsCriterion("friends =", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsNotEqualTo(String[] value) {
            addFriendsCriterion("friends <>", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsGreaterThan(String[] value) {
            addFriendsCriterion("friends >", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsGreaterThanOrEqualTo(String[] value) {
            addFriendsCriterion("friends >=", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsLessThan(String[] value) {
            addFriendsCriterion("friends <", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsLessThanOrEqualTo(String[] value) {
            addFriendsCriterion("friends <=", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsLike(String[] value) {
            addFriendsCriterion("friends like", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsNotLike(String[] value) {
            addFriendsCriterion("friends not like", value, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsIn(List<String[]> values) {
            addFriendsCriterion("friends in", values, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsNotIn(List<String[]> values) {
            addFriendsCriterion("friends not in", values, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsBetween(String[] value1, String[] value2) {
            addFriendsCriterion("friends between", value1, value2, "friends");
            return (Criteria) this;
        }

        public Criteria andFriendsNotBetween(String[] value1, String[] value2) {
            addFriendsCriterion("friends not between", value1, value2, "friends");
            return (Criteria) this;
        }

        public Criteria andHobbysIsNull() {
            addCriterion("hobbys is null");
            return (Criteria) this;
        }

        public Criteria andHobbysIsNotNull() {
            addCriterion("hobbys is not null");
            return (Criteria) this;
        }

        public Criteria andHobbysEqualTo(String[] value) {
            addHobbysCriterion("hobbys =", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysNotEqualTo(String[] value) {
            addHobbysCriterion("hobbys <>", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysGreaterThan(String[] value) {
            addHobbysCriterion("hobbys >", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysGreaterThanOrEqualTo(String[] value) {
            addHobbysCriterion("hobbys >=", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysLessThan(String[] value) {
            addHobbysCriterion("hobbys <", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysLessThanOrEqualTo(String[] value) {
            addHobbysCriterion("hobbys <=", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysLike(String[] value) {
            addHobbysCriterion("hobbys like", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysNotLike(String[] value) {
            addHobbysCriterion("hobbys not like", value, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysIn(List<String[]> values) {
            addHobbysCriterion("hobbys in", values, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysNotIn(List<String[]> values) {
            addHobbysCriterion("hobbys not in", values, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysBetween(String[] value1, String[] value2) {
            addHobbysCriterion("hobbys between", value1, value2, "hobbys");
            return (Criteria) this;
        }

        public Criteria andHobbysNotBetween(String[] value1, String[] value2) {
            addHobbysCriterion("hobbys not between", value1, value2, "hobbys");
            return (Criteria) this;
        }

        public Criteria andCarrersIsNull() {
            addCriterion("carrers is null");
            return (Criteria) this;
        }

        public Criteria andCarrersIsNotNull() {
            addCriterion("carrers is not null");
            return (Criteria) this;
        }

        public Criteria andCarrersEqualTo(String value) {
            addCriterion("carrers =", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersNotEqualTo(String value) {
            addCriterion("carrers <>", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersGreaterThan(String value) {
            addCriterion("carrers >", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersGreaterThanOrEqualTo(String value) {
            addCriterion("carrers >=", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersLessThan(String value) {
            addCriterion("carrers <", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersLessThanOrEqualTo(String value) {
            addCriterion("carrers <=", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersLike(String value) {
            addCriterion("carrers like", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersNotLike(String value) {
            addCriterion("carrers not like", value, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersIn(List<String> values) {
            addCriterion("carrers in", values, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersNotIn(List<String> values) {
            addCriterion("carrers not in", values, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersBetween(String value1, String value2) {
            addCriterion("carrers between", value1, value2, "carrers");
            return (Criteria) this;
        }

        public Criteria andCarrersNotBetween(String value1, String value2) {
            addCriterion("carrers not between", value1, value2, "carrers");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbg.generated do_not_delete_during_merge Sat Sep 26 16:12:52 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbg.generated Sat Sep 26 16:12:52 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}