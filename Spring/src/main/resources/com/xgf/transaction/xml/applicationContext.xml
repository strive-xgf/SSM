<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--扫描包-->
    <context:component-scan base-package="com.xgf.transaction.xml"/>

    <!-- 数据源
       配置数据源数据库连接 -->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="username" value="root"/>
        <property name="password" value="861221293"/>
        <property name="url" value="jdbc:mysql://localhost:3306/spring?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    </bean>

    <!-- 模板 -->
    <!--封装数据库操作方法，简化数据库操作-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--  事务管理器 完成手动事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--  advice 定义通知：控制事务的方法，需要织入到业务方法中
        提交commit  回滚rollback
    -->
    <!--配通知-->
    <tx:advice transaction-manager="transactionManager" id="myadvice1">
        <tx:attributes>
            <!-- 实际开发中  对于更新都用update开头，对于插入、保存都用save开头，对于查询单个数据都用get开头 查询多个数据用list开头
                    配置 <tx:method>的name属性一般都是save*、get*、update*
                    -->
            <tx:method name="sell*" read-only="false" propagation="REQUIRED" isolation="READ_COMMITTED"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
        
    </tx:advice>

    <tx:advice transaction-manager="transactionManager" id="myadvice2">
        <tx:attributes>
            <!-- 实际开发中  对于更新都用update开头，对于插入、保存都用save开头，对于查询单个数据都用get开头 查询多个数据用list开头
                    配置 <tx:method>的name属性一般都是save*、get*、update*
                    -->
            <tx:method name="record*" read-only="false" propagation="REQUIRED" isolation="READ_COMMITTED"/>
        </tx:attributes>

    </tx:advice>

    <!-- 事务配置 -->
    <aop:config>
        <!--通知应用在什么地方上-->
        <aop:pointcut id="mypointcut1" expression="execution(* com.xgf.transaction.xml.service.BookStoreServiceImpl.*(..))"/>
        <aop:pointcut id="mypointcut2" expression="execution(* com.xgf.transaction.xml.service.BookRecordService.*(..))"/>
       <!--切面： 包括  切点 + 通知-->
        <aop:advisor advice-ref="myadvice1" pointcut-ref="mypointcut1"/>
        <aop:advisor advice-ref="myadvice2" pointcut-ref="mypointcut2"/>
    </aop:config>

</beans>